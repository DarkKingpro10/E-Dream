/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;
//IMportamos todas las librerias a utilizar

import Recursos_Tipografias.Fuentes;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import Controlador.RecuperarContraseñaController;
import java.util.Timer;
import java.util.TimerTask;
import Controlador.Validaciones;
import javax.swing.JComponent;

/**
 *
 * @author Jesus Gerardo
 */
public class FrmRecuperarContraseña extends javax.swing.JFrame {

    FondoPanel fondo = new FondoPanel();
    Fuentes tipoFuente = new Fuentes();
    //Creamos objeto del controlador
    RecuperarContraseñaController obj = new RecuperarContraseñaController();
    //Creamos variable global que guarde el nombre del usuario y una de correo para el reenvio
    String nombreUsuario, correor;
    //Creamos variable global que guarde el pin de recuperación
    String PINr;
    //Creamos dos variables una que capture la hora de envio del PIN y otra la hora actual
    int horaEnvio, horaActual, segundo = 11;

    /**
     * Creates new form FrmRecuperarContraseña
     */
    public FrmRecuperarContraseña() {
        initComponents();
        lblTituloPrimerUso.setFont(tipoFuente.fuente(tipoFuente.MaxwellBold, 0, 20));
        lblOpps.setFont(tipoFuente.fuente(tipoFuente.MaxwellBold, 0, 21));
        lblPreocupacion.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        lblIndicaciones.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        lblUsuario.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 21));
        txtUsuario.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 21));
        lblCorreo.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 21));
        txtCorreo.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 21));
        lblPIN.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 21));
        txtPINR.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 21));
        btnRegresar.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 21));
        btnRecuperar.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 21));
        btnReenviarPIN.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 21));
        txtaIndicaciones.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 21));
        lblCorreoInvalido.setFont(tipoFuente.fuente(tipoFuente.MaxwellBold, 0, 20));
        btnReenviarPIN.setVisible(false);
        txtaIndicaciones.setVisible(false);
        txtPINR.setVisible(false);
        lblCorreoInvalido.setVisible(false);
        txtaIndicaciones.setBackground(new Color(0, 0, 0, 0));
        //Validamos que no se pueda pegar
        //Creamos un objeto de la clase Validaciones para acceder a sus metodos
        Validaciones val = new Validaciones();
        //Creamos un arreglo de tipo JComponentes que almacenara el componente
        JComponent[] pegar = {txtPINR};
        //Invocamos el metodo de no pegar y le pasamos como parametro el arreglo de componentes
        val.noPegar(pegar);
        
        /*Utilizamos new ImageIcon(URL location).getImage() donde el argumento
        *location lo obtenemos a través del método getClass().getResource(String name)
        *que nos devuelve un URL absoluto del recurso que especificamos como String.
        */
        Image icon = new ImageIcon(getClass().getResource("/Recursos_img/E-Dream logo.png")).getImage();
        setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlContenedor = new javax.swing.JPanel();
        lblImagen = new javax.swing.JLabel();
        lblCorreoInvalido = new javax.swing.JLabel();
        lblOpps = new javax.swing.JLabel();
        lblIndicaciones = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        lblPreocupacion = new javax.swing.JLabel();
        lblIconoUsuario = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        lblIconoCorreo = new javax.swing.JLabel();
        lblPIN = new javax.swing.JLabel();
        txtPINR = new javax.swing.JTextField();
        lblIconoAdmin = new javax.swing.JLabel();
        lblCorreo = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        btnRegresar = new org.jdesktop.swingx.JXButton();
        btnReenviarPIN = new org.jdesktop.swingx.JXButton();
        btnRecuperar = new org.jdesktop.swingx.JXButton();
        txtaIndicaciones = new javax.swing.JTextArea();
        lblCorreoConfirm = new javax.swing.JLabel();
        txtPIN = new javax.swing.JPasswordField();
        lblTiempoReenvio = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblTituloPrimerUso = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlContenedor.setPreferredSize(new java.awt.Dimension(1090, 620));
        pnlContenedor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/OlvidoContraseña-img-m.png"))); // NOI18N
        pnlContenedor.add(lblImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 30, -1, -1));

        lblCorreoInvalido.setForeground(new java.awt.Color(255, 0, 0));
        lblCorreoInvalido.setText("¡Correo Invalido!");
        pnlContenedor.add(lblCorreoInvalido, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 390, -1, -1));
        lblCorreoInvalido.getAccessibleContext().setAccessibleName("");

        lblOpps.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblOpps.setText("¡Opps! Olvidaste tu contraseña");
        pnlContenedor.add(lblOpps, new org.netbeans.lib.awtextra.AbsoluteConstraints(732, 261, -1, -1));

        lblIndicaciones.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblIndicaciones.setText("Llena la siguiente información para verificar que perteneces a la organización");
        pnlContenedor.add(lblIndicaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 340, -1, -1));

        lblUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblUsuario.setText("Usuario:");
        pnlContenedor.add(lblUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 420, 120, -1));

        lblPreocupacion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPreocupacion.setText("No te preocupes te ayudaremos solo llena la siguiente información");
        pnlContenedor.add(lblPreocupacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, -1, -1));

        lblIconoUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/Empleado50px.png"))); // NOI18N
        pnlContenedor.add(lblIconoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 400, -1, -1));
        pnlContenedor.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 420, 160, -1));

        lblIconoCorreo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/Email50px.png"))); // NOI18N
        pnlContenedor.add(lblIconoCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 400, -1, -1));

        lblPIN.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPIN.setText("PIN del Administrador:");
        pnlContenedor.add(lblPIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 500, 220, 20));

        txtPINR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPINRActionPerformed(evt);
            }
        });
        txtPINR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPINRKeyTyped(evt);
            }
        });
        pnlContenedor.add(txtPINR, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 500, 190, -1));

        lblIconoAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/PinAdmin.png"))); // NOI18N
        pnlContenedor.add(lblIconoAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 470, -1, -1));

        lblCorreo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCorreo.setText("Correo del Usuario:");
        pnlContenedor.add(lblCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 420, 140, 20));

        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });
        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCorreoKeyReleased(evt);
            }
        });
        pnlContenedor.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 420, 190, -1));

        btnRegresar.setBorder(null);
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/RegresarLogin.png"))); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.setBorderPainted(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        pnlContenedor.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 140, -1));

        btnReenviarPIN.setBackground(new java.awt.Color(255, 255, 255));
        btnReenviarPIN.setBorder(new org.jdesktop.swingx.border.IconBorder());
        btnReenviarPIN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/Recover50px.png"))); // NOI18N
        btnReenviarPIN.setText("Reenviar PIN");
        btnReenviarPIN.setBorderPainted(false);
        btnReenviarPIN.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReenviarPIN.setOpaque(false);
        btnReenviarPIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReenviarPINActionPerformed(evt);
            }
        });
        pnlContenedor.add(btnReenviarPIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 550, 150, -1));

        btnRecuperar.setBackground(new java.awt.Color(255, 255, 255));
        btnRecuperar.setBorder(new org.jdesktop.swingx.border.IconBorder());
        btnRecuperar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/Recover50px.png"))); // NOI18N
        btnRecuperar.setText("Recuperar");
        btnRecuperar.setBorderPainted(false);
        btnRecuperar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRecuperar.setOpaque(false);
        btnRecuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecuperarActionPerformed(evt);
            }
        });
        pnlContenedor.add(btnRecuperar, new org.netbeans.lib.awtextra.AbsoluteConstraints(905, 480, 150, -1));

        txtaIndicaciones.setEditable(false);
        txtaIndicaciones.setColumns(20);
        txtaIndicaciones.setLineWrap(true);
        txtaIndicaciones.setRows(5);
        txtaIndicaciones.setText("Ingresa el PIN enviado al correo del usuario para terminar de confirmar tu identidad, si no se ha enviado por favor click en reenviar PIN ");
        txtaIndicaciones.setBorder(null);
        txtaIndicaciones.setOpaque(false);
        pnlContenedor.add(txtaIndicaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 340, 510, 80));

        lblCorreoConfirm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/PINConfirmed.png"))); // NOI18N
        pnlContenedor.add(lblCorreoConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 100, 100, 100));
        pnlContenedor.add(txtPIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 500, 190, -1));
        pnlContenedor.add(lblTiempoReenvio, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 570, -1, -1));

        jPanel1.setBackground(new java.awt.Color(14, 13, 21));

        lblTituloPrimerUso.setForeground(new java.awt.Color(240, 240, 240));
        lblTituloPrimerUso.setText("Recuperar Contraseña");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/Close.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(510, 510, 510)
                .addComponent(lblTituloPrimerUso, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 335, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(179, 179, 179))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTituloPrimerUso, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlContenedor.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/ImagenLogin-m.png"))); // NOI18N
        pnlContenedor.add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 630));

        getContentPane().add(pnlContenedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void FormRecuContraPIN() {
        lblIconoUsuario.setVisible(false);
        lblUsuario.setVisible(false);
        lblIconoCorreo.setVisible(false);
        txtUsuario.setVisible(false);
        lblCorreo.setVisible(false);
        txtCorreo.setVisible(false);
        lblIndicaciones.setVisible(false);
        txtPIN.setVisible(false);
        lblCorreoInvalido.setVisible(false);
        lblIndicaciones.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        lblImagen.setVisible(false);
        lblPIN.setText("PIN de recuperación");
        btnReenviarPIN.setVisible(true);
        txtaIndicaciones.setVisible(true);
        txtPINR.setVisible(true);
    }

    private void txtPINRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPINRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPINRActionPerformed

    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        if (btnReenviarPIN.isVisible() == true) {
            btnReenviarPIN.setVisible(false);
            txtaIndicaciones.setVisible(false);
            lblIconoUsuario.setVisible(false);
            txtPINR.setVisible(false);
            lblUsuario.setVisible(true);
            lblIconoCorreo.setVisible(false);
            txtUsuario.setVisible(true);
            lblCorreo.setVisible(true);
            txtCorreo.setVisible(true);
            lblIndicaciones.setVisible(true);
            lblImagen.setVisible(true);
            txtPIN.setVisible(true);
        } else {
            FrmLogin login = new FrmLogin();
            login.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnReenviarPINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReenviarPINActionPerformed
        //Ponemos el boton deshabilitado
        btnReenviarPIN.setEnabled(false);
        //Creamos el PIN de confirmación al correo invocando un metodo en el constructor
        PINr = obj.GenerarPIN();
        //Enviamos el correo
        boolean enviarCorreo = obj.EnviarCorreo(PINr, correor);
        //Ejecutamos el metodo que lo volvera a activar en 10seg
        ReenviarTiempo();
    }//GEN-LAST:event_btnReenviarPINActionPerformed

    private void btnRecuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecuperarActionPerformed
        //Validamos si esta en el segundo paso o no lo esta, si lo esta el boton de reenviar
        //Estara activado, sino lo esta el boton de reenviar estara oculto
        if (btnReenviarPIN.isVisible() == true) {
            //Como esta activo el boton reenviar significa que el pin ha sido enviado y esta 
            //en la etapa 2
            //Asignamo un valor a la hora actual
            horaActual = obj.obtenerhora();
            //Obtenemos el PIN
            String PIN = txtPINR.getText();
            //verificamos si la hora actual es una hora más que la de envio por lo que se debera enviar
            // de nuevo un PIN
            if ((horaEnvio + 1) == horaActual) {
                FrmNotiError error = new FrmNotiError();
                error.TAnotiError.setText("El PIN ingresado no es el correcto o a caducado por favor revisar o reenviar PIN");
                error.setVisible(true);
            } else {
                //Se comprueba que el PIN sea el mismo PIN enviado
                if (PINr.equals(PIN)) {
                    //Se crea un objeto del form renovar contraseña
                    FrmRenovarContraseña renovar = new FrmRenovarContraseña();
                    renovar.setVisible(true);
                    dispose();
                }else {
                    FrmNotiError error = new FrmNotiError();
                    error.TAnotiError.setText("El PIN ingresado no es el correcto");
                    error.setVisible(true);
                }
            }
        } else {
            if (txtUsuario.getText().isEmpty() || txtCorreo.getText().isEmpty() || txtPIN.getText().isEmpty()) {
                FrmNotiError error = new FrmNotiError();
                error.TAnotiError.setText("Verifique que todos los campos esten llenos");
                error.setVisible(true);
            } else {
                //Creamos las variables a almacenar los valor
                String nombreuser = txtUsuario.getText(),
                    correo = txtCorreo.getText(),
                    PIN = new String(txtPIN.getPassword());
                //Creamos dos booleans para comprobar que el PIN y el usuario existan
                boolean usuarioc = obj.ConfirmarUsuario(nombreuser);
                boolean PINc = obj.ConfirmarPIN(PIN);
                //Validamos que el usuario exista
                if (usuarioc == true && PINc == true && !lblCorreoInvalido.isVisible()) {
                    //Guardamos el usuario en la variable global
                    nombreUsuario = obj.getUsuario();
                    //Creamos el PIN de confirmación al correo invocando un metodo en el constructor
                    PINr = obj.GenerarPIN();
                    correor = correo;
                    //ejecutamos el metodo que envia el correo y enviamos los paramatros
                    boolean enviarCorreo = obj.EnviarCorreo(PINr, correo);
                    //Verificamos si el correo fue enviado
                    if (enviarCorreo == true) {
                        horaEnvio = obj.obtenerhora();
                        FormRecuContraPIN();
                    }
                }else{
                    FrmNotiError error = new FrmNotiError();
                    error.TAnotiError.setText("¡Usuario o PIN incorrectos! Verifique que el usuario y el PIN esten correctos");
                    error.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_btnRecuperarActionPerformed

    private void txtCorreoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyReleased
        // TODO add your handling code here:
        //Invocamos a un metodo en el controlador donde se evalue si el formato del correo es el correcto
        boolean confirm = obj.ConfirmarCorreo(txtCorreo.getText());
        //Verificamos si el resultado es null o false
        if (confirm == true) {
            lblCorreoInvalido.setVisible(false);
        } else {
            lblCorreoInvalido.setVisible(true);
        }
    }//GEN-LAST:event_txtCorreoKeyReleased

    private void txtPINRKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPINRKeyTyped
        // TODO add your handling code here:
        //Validamos que solo se ingresen numeros
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        } else {

        }
        //Validamos que solo se ingresen 4 caracteres
        if (txtPINR.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPINRKeyTyped

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    //Creamos metodo que deshabilite por un tiempo el boton de reenviar PIN
    public void ReenviarTiempo() {
        //Creamos objeto de timpo Timer
        Timer tiempo = new Timer();
        //Creamos la tarea a realizar
        TimerTask habilitar = new TimerTask() {
            @Override
            public void run() {
                //Evaluamos mientras la variable segundo sea menor 10 se actualice
                if (segundo >= 1) {
                    segundo = segundo - 1;
                    lblTiempoReenvio.setText("Tiempo para siguiente reenvio: " + segundo + " seg");

                } else {
                    //Se activa el boton
                    btnReenviarPIN.setEnabled(true);
                    //Se reinicia la variable segundo
                    segundo = 10;
                    //Se pone invisible el mensaje
                    lblTiempoReenvio.setVisible(false);
                    //Se cancela el timertask
                    cancel();
                }
            }
        };
        tiempo.schedule(habilitar, 0, 1000);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRecuperarContraseña.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRecuperarContraseña.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRecuperarContraseña.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRecuperarContraseña.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRecuperarContraseña().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btnRecuperar;
    private org.jdesktop.swingx.JXButton btnReenviarPIN;
    private org.jdesktop.swingx.JXButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblCorreoConfirm;
    private javax.swing.JLabel lblCorreoInvalido;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblIconoAdmin;
    private javax.swing.JLabel lblIconoCorreo;
    private javax.swing.JLabel lblIconoUsuario;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JLabel lblIndicaciones;
    private javax.swing.JLabel lblOpps;
    private javax.swing.JLabel lblPIN;
    private javax.swing.JLabel lblPreocupacion;
    private javax.swing.JLabel lblTiempoReenvio;
    private javax.swing.JLabel lblTituloPrimerUso;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPanel pnlContenedor;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JPasswordField txtPIN;
    private javax.swing.JTextField txtPINR;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JTextArea txtaIndicaciones;
    // End of variables declaration//GEN-END:variables
    class FondoPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/Recursos/ImagenLogin-m.png")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
}
