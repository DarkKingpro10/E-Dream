package Vista;
//Realizamos las importaciones a realizar
import Recursos_Tipografias.Fuentes;
import Controlador.ControladorUsuario;
import Controlador.ControladorVariables;
import java.awt.Color;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
/**
 *
 * @author Jesús Gerardo
 */
public class FrmUsuario extends javax.swing.JPanel {
    //Creamos objeto del controlador
    ControladorUsuario controller = new ControladorUsuario();
    
    //Colores Modo Night
    Color Piel = new Color(255,222,212);
    Color Morado = new Color(94,45,79);
    Color Oscuro = new Color(14,13,21);
    //Colores Modo Light
    Color AzulOscuro = new Color(33, 47, 74);
    Color Celeste = new Color(61, 111, 137);
    
    public FrmUsuario(){
        initComponents();
        Colores();
        Fuentes tipoFuente;
        //añadimos la tipografia a los distintos componentes 
         tipoFuente = new Fuentes();
        lblTitulo.setFont(tipoFuente.fuente(tipoFuente.MaxwellBold, 0, 40));
        lblclave.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        lblhoradesblock.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        lblEstadoUser.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        lblEstado.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        lblUsuario.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        btnIngresar.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        btnActualizar.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        btnEliminar.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        txtUsuario.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        txtClave.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        tbUsuarios.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        rbtnActualizar.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        lblUsuarioexist.setFont(tipoFuente.fuente(tipoFuente.MaxwellRegular, 0, 20));
        lblUsuarioexist.setVisible(false);
        //Cargamos la tabla con los usuarios
        cargarTabla();
        //Cargamos los estados de usuario
        cargarEstado();
        //Cargar los empleados
        cargarEmpleado();
        //formateamos el formated textbox
        try{
            fmtHoraDesbloq.setFormatterFactory(new DefaultFormatterFactory(new MaskFormatter("##:##:##")));
        }
        catch(Exception e){
        
        }
        //Colocamos la hora desbloq 00:00:00
        fmtHoraDesbloq.setText("00:00:00");
    }

    void Colores(){
        ControladorVariables variables = new ControladorVariables();
        switch(variables.getColor()){
            case 1://Oscuro
                jPanel1.setBackground(Piel);
                jPanel3.setBackground(Piel);
                jPanel7.setBackground(Piel);
                jPanel2.setBackground(Oscuro);
                break;
            case 2://Claro
                jPanel1.setBackground(Color.white);
                jPanel3.setBackground(Color.white);
                jPanel7.setBackground(Color.white);
                jPanel2.setBackground(AzulOscuro);
                break;
            default:
                jPanel1.setBackground(Piel);
                jPanel3.setBackground(Piel);
                jPanel7.setBackground(Piel);
                jPanel2.setBackground(Oscuro);
                break;
        }        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        lblclave = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtClave = new javax.swing.JTextField();
        lblhoradesblock = new javax.swing.JLabel();
        lblEstadoUser = new javax.swing.JLabel();
        cmbEstadoUsuario = new javax.swing.JComboBox<>();
        lblEstado = new javax.swing.JLabel();
        cmbEmpleado = new javax.swing.JComboBox<>();
        lblUsuario = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jscroll = new javax.swing.JScrollPane();
        tbUsuarios = new javax.swing.JTable();
        btnIngresar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        fmtHoraDesbloq = new javax.swing.JFormattedTextField();
        rbtnActualizar = new javax.swing.JRadioButton();
        lblUsuarioexist = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(32767, 723));

        jPanel1.setBackground(new java.awt.Color(255, 222, 212));

        jPanel2.setBackground(new java.awt.Color(14, 13, 21));
        jPanel2.setPreferredSize(new java.awt.Dimension(144, 44));

        lblTitulo.setBackground(new java.awt.Color(255, 255, 255));
        lblTitulo.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Usuarios");
        lblTitulo.setMaximumSize(new java.awt.Dimension(100, 100));
        lblTitulo.setMinimumSize(new java.awt.Dimension(690, 79));
        lblTitulo.setPreferredSize(new java.awt.Dimension(144, 44));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1085, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(150, 86, 149));

        jPanel7.setBackground(new java.awt.Color(255, 222, 212));
        jPanel7.setMaximumSize(new java.awt.Dimension(32767, 662));

        lblclave.setBackground(new java.awt.Color(255, 255, 255));
        lblclave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/contrasena35px.png"))); // NOI18N
        lblclave.setText("Clave de usuario:");

        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyReleased(evt);
            }
        });

        txtClave.setPreferredSize(new java.awt.Dimension(152, 35));
        txtClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClaveActionPerformed(evt);
            }
        });

        lblhoradesblock.setBackground(new java.awt.Color(255, 255, 255));
        lblhoradesblock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/hora23px.png"))); // NOI18N
        lblhoradesblock.setText("Hora desbloqueo:");

        lblEstadoUser.setBackground(new java.awt.Color(255, 255, 255));
        lblEstadoUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/Estado35px.png"))); // NOI18N
        lblEstadoUser.setText("Estado Usuario:");

        cmbEstadoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un item" }));
        cmbEstadoUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbEstadoUsuarioMouseClicked(evt);
            }
        });
        cmbEstadoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEstadoUsuarioActionPerformed(evt);
            }
        });

        lblEstado.setBackground(new java.awt.Color(255, 255, 255));
        lblEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/Empleado35px.png"))); // NOI18N
        lblEstado.setText("Nombre de empleado:");

        cmbEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblUsuario.setBackground(new java.awt.Color(255, 255, 255));
        lblUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/Usuario35px.png"))); // NOI18N
        lblUsuario.setText("Usuario:");

        jPanel5.setBackground(new java.awt.Color(150, 86, 149));

        jscroll.setBackground(new java.awt.Color(150, 86, 149));

        tbUsuarios.setBackground(new java.awt.Color(164, 188, 188));
        tbUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Usuario", "claveUsuario", "Intento", "horaBlock", "horaDesblock", "EstadoUsuario", "Empleado"
            }
        ));
        tbUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUsuariosMouseClicked(evt);
            }
        });
        jscroll.setViewportView(tbUsuarios);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscroll, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscroll, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
        );

        btnIngresar.setBackground(new java.awt.Color(164, 188, 188));
        btnIngresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/agregar30px.png"))); // NOI18N
        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(164, 188, 188));
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/Actualizar30px.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(164, 188, 188));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos_img/Eliminar30px.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        fmtHoraDesbloq.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("hh:mm:ss "))));

        rbtnActualizar.setText("Actualizar sin empleado");

        lblUsuarioexist.setForeground(new java.awt.Color(255, 0, 0));
        lblUsuarioexist.setText("¡Ya existe un usuario con ese nombre!");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUsuario)
                                    .addComponent(txtUsuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fmtHoraDesbloq, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblhoradesblock)
                                    .addComponent(lblEstado))))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblclave)
                                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEstadoUser)))
                            .addComponent(cmbEstadoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(rbtnActualizar))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(lblUsuarioexist)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblclave)
                            .addComponent(lblUsuario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtClave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblhoradesblock)
                            .addComponent(lblEstadoUser))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fmtHoraDesbloq, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbEstadoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(lblEstado)
                .addGap(32, 32, 32)
                .addComponent(cmbEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(rbtnActualizar)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(lblUsuarioexist)
                .addGap(120, 120, 120))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1085, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    //Creamos metodo que limpie los campos
    void limpiarCampos(){
        txtUsuario.setText("");
        txtClave.setText("");
        fmtHoraDesbloq.setText("00:00:00");
    }
    //Creamos metodo que cargue la tabla
    void cargarTabla(){
        tbUsuarios.setModel(controller.obtenerUsuarios());
    }
    //Creamos metodo que cargue los estados de usuario en el combo box
    void cargarEstado(){
        cmbEstadoUsuario.setModel(controller.obtenerEstados());
    }
    //Creamos metodo que cargue los empleados
    void cargarEmpleado(){
        cmbEmpleado.setModel(controller.obtenerEmpleado());
    }
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        //Consultamos que no halla campos vacios
        if (txtUsuario.getText().isEmpty() || txtClave.getText().isEmpty()) {
            FrmNoti1 error = new FrmNoti1();
            error.lblTituloNoti1.setText("¡Algo no esta bien!");
            error.TAMensajeError.setText("!Campos vacios!evisa que todos los campos esten lleno");
            error.setVisible(true);
        }else{
            //Consultamos el id del usuario ejecutando metodo en el controlador y enviando como
            //parametro el usuario
            controller.setIdUsuario(controller.obtenerIdUsuario(txtUsuario.getText()));
            //Consultamos el id del estado del usuario
            //Pedimos el id de estado dependiendo 
            int idEstado=cmbEstadoUsuario.getSelectedIndex();
            //enviamos el index al metodo que retornara el id
            controller.setIdEstado(controller.obtenerIdEstado(idEstado));
            //Pedimos el id del empleado
            int idEmpleado=cmbEmpleado.getSelectedIndex();
            controller.setIdEmpleado(controller.ObtnerIdEmpleado(idEmpleado));
            //Enviamos el usuario
            controller.setUsuario(txtUsuario.getText());
            //Enviamos la clave
            controller.setClave(txtClave.getText());
            //Enviamos el idUsuario
            //Comprobamos que la hora este bien escrita con el metodo del constructor
            boolean confirmh=controller.fechaCorrecta(fmtHoraDesbloq.getText());
            if (confirmh==true && !lblUsuarioexist.isVisible()) {
                controller.setHoraDesbloq(fmtHoraDesbloq.getText());
                //Evaluamos si se desea actualizar sin empleado, esto sera posible
                //evaluando si el radio button Actualizar esta seleccionado
                if (rbtnActualizar.isSelected()) {
                    //Esta seleccionado
                    //Como no esta actualizada ejecutamos el metodo que actualizar usuario enviado como parametro false
                    controller.actualizarUsuario(false);
                    cargarTabla();
                    limpiarCampos();
                }else{
                    //Como no esta activo, se actualizara en la tabla de empleado el id del usuario
                    //Actualizamos el usuario
                    controller.actualizarUsuario(true);
                    cargarTabla();
                }
            }else{
                FrmNoti2 error = new FrmNoti2();
                error.lblTituloNoti2.setText("¡Algo no esta bien!");
                error.TANoti2.setText("!Ya existe un usuario con ese nombre!");
                error.setVisible(true); 
            }
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClaveActionPerformed

    private void cmbEstadoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEstadoUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbEstadoUsuarioActionPerformed

    private void cmbEstadoUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbEstadoUsuarioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbEstadoUsuarioMouseClicked

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        // TODO add your handling code here:
        //Comprobamos que los campos no esten vacios
        if (txtUsuario.getText().isEmpty() || txtClave.getText().isEmpty()) {
            FrmNoti1 error = new FrmNoti1();
            error.lblTituloNoti1.setText("¡Algo no esta bien!");
            error.TAMensajeError.setText("!Campos vacios!evisa que todos los campos esten lleno");
            error.setVisible(true);
        }else{
            if (!lblUsuarioexist.isVisible()) {
                //Pedimos el id de estado dependiendo 
                int id=cmbEstadoUsuario.getSelectedIndex();
                //enviamos el index al metodo que retornara el id
                id=controller.obtenerIdEstado(id);
                //Ejecutamos el metodo de agregar usuario del controlador y le enviamos los parametros
                controller.guardarUsuario(txtUsuario.getText(), txtClave.getText(), id);
                cargarTabla();
                limpiarCampos();
            }else{
                FrmNoti2 error = new FrmNoti2();
                error.lblTituloNoti2.setText("¡Algo no esta bien!");
                error.TANoti2.setText("!Ya existe un usuario con ese nombre!");
                error.setVisible(true); 
            }
        }
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void tbUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUsuariosMouseClicked
        // TODO add your handling code here:
        //Colocamos los datos del jtable en los lugares correspondientes 
        //Colocamos el usuario
        txtUsuario.setText(tbUsuarios.getValueAt(tbUsuarios.getSelectedRow(), 0).toString());
        //Colocamos la clave
        txtClave.setText(tbUsuarios.getValueAt(tbUsuarios.getSelectedRow(),1).toString());
        //Comprobamos que no este vacio el campo hora, si lo esta no se colocara nada para evitar error
        try{
            fmtHoraDesbloq.setText(tbUsuarios.getValueAt(tbUsuarios.getSelectedRow(),4).toString());
        }catch(Exception e){
            //colocamos la hora desbloq 00:00:00
            fmtHoraDesbloq.setText("00:00:00");
        }
        //Colocamos el estado del usuario
        cmbEstadoUsuario.setSelectedItem(tbUsuarios.getValueAt(tbUsuarios.getSelectedRow(),5).toString());
        //Comprobamos que no este vacio el campo empleado, si lo esta no se colocara nada
        try{
            cmbEmpleado.setSelectedItem(tbUsuarios.getValueAt(tbUsuarios.getSelectedRow(),6).toString());   
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_tbUsuariosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        //Comprobamos que los campos no esten vacios
        if (txtUsuario.getText().isEmpty() || txtClave.getText().isEmpty()) {
            FrmNoti1 error = new FrmNoti1();
            error.lblTituloNoti1.setText("¡Algo no esta bien!");
            error.TAMensajeError.setText("!Campos vacios!evisa que todos los campos esten lleno");
            error.setVisible(true);
        }else{
            //Obtenemos el id del usuario
            int id=controller.obtenerIdUsuario(txtUsuario.getText());
            controller.eliminarUsuario(id);
            cargarTabla();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuarioKeyReleased
        // TODO add your handling code here:
        //Invocamos a un metodo en el controlador donde se evalue si el formato del correo es el correcto
        controller.setUsuario(txtUsuario.getText());
        boolean confirm = controller.confirmarUsuario();
        //Verificamos si el resultado es null o false
        if (confirm==true) {
            lblUsuarioexist.setVisible(true);
        }else{
            lblUsuarioexist.setVisible(false);
        }
    }//GEN-LAST:event_txtUsuarioKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JComboBox<String> cmbEmpleado;
    private javax.swing.JComboBox<String> cmbEstadoUsuario;
    private javax.swing.JFormattedTextField fmtHoraDesbloq;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jscroll;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblEstadoUser;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JLabel lblUsuarioexist;
    private javax.swing.JLabel lblclave;
    private javax.swing.JLabel lblhoradesblock;
    private javax.swing.JRadioButton rbtnActualizar;
    private javax.swing.JTable tbUsuarios;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
